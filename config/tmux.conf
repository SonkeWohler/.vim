# specify the shell
set-option -g default-shell /bin/fish

# --- plugins, let's try this
# plugin manager for tmux
set -g @plugin 'tmux-plugins/tpm'
# everybody uses this, I'm testing it.
# this might just stay here forgotten for a while, if it doesn't break anything
# for me
set -g @plugin 'tmux-plugins/tmux-sensible'
# yanking
set -g @plugin 'tmux-plugins/tmux-yank'
# nord color scheme, my fave
set -g @plugin "nordtheme/tmux"
# signal me when tmux prefix key is pressed
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# filetree
set -g @treemux-tree-nvim-init-file '~/.tmux/plugins/treemux/configs/treemux_init.lua'
set -g @plugin 'kiyoon/treemux'

# --- appearance

# right status bar:
# - tmux prefix pressed
# - current time
# - current user
set -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M'


#-- various


# mouse support, because why not
# unfortunately this is not playing nice with neovim, and it isn't cause by any
# plugin/config (verified with nvim --clean).
set -g mouse off

# https://superuser.com/questions/252214/slight-delay-when-switching-modes-in-vim-using-tmux-or-screen
set -sg escape-time 0

# status bar to top because that is my style, plus depending on terminal colors
# the bottom bar might hide the cursor at times
set-option -g status-position top

# new panes open in current directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# start indices at 1 (as in vim) because 0 is disjoint from the number row
set -g base-index 1
set-window-option -g pane-base-index 1

### --- vim moding

# vim mode for tmux, mostly for visual mode `<C-b>[`
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# correct yanking in visual
set -g @yank_selection 'primary' # or 'secondary' or 'clipboard'
set -g @yank_selection_mouse 'primary' # or 'secondary' or 'clipboard'
set -g @yank_with_mouse on
# double click doesn't work the same way that mouse select and press 'y' does.
# Not sure why or how to fix it, but the below doesn't work.  Something similar
# might though.
# bind-key -T copy-mode-vi DoubleClick1Pane \
#     select-pane \; \
#     send-keys -X select-word-no-clear \; \
#     send-keys -X copy-pipe-no-clear "xclip -in -sel primary"

# vimlike split navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# the same but faster
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R
# resize
bind -n M-PageUp resize-pane -U
bind -n M-PageDown resize-pane -D
bind -n M-Home resize-pane -L
bind -n M-End resize-pane -R
# rearrange
bind -n M-Space next-layout

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
# bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"

bind -n M-1 select-window -t:1
bind -n M-2 select-window -t:2
bind -n M-3 select-window -t:3
bind -n M-4 select-window -t:4
bind -n M-5 select-window -t:5
bind -n M-6 select-window -t:6
bind -n M-7 select-window -t:7
bind -n M-8 select-window -t:8
bind -n M-9 select-window -t:9
bind -n M-0 select-window -t:10

# focus events
set-option -g focus-events on

# not sure why getting the colors right was such an endeavour.
# this helped
# https://github.com/alacritty/alacritty/issues/109#issuecomment-507026155
set  -g default-terminal "tmux-256color"
set -ag terminal-overrides ",alacritty:RGB"

# load plugins
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run '~/.tmux/plugins/tpm/tpm'
