[user]
	name = sonke
	email = sonke.a.wohler@gmail.com
[core]
	symlinks = true
	editor = nvim
	pager = delta
	excludesFile = ~/gitignore
[rebase]
	autoStash = true
	autoSquash = true
	missingCommitsCheck = error
	abbreviateCommands = true
	updateRefs = true
[mergetool "nvim"]
	cmd = nvim -d $LOCAL $MERGED $REMOTE
[log]
	date = iso-local
[merge]
	tool = nvim
	autoStash = true
[pull]
	rebase = false
[fetch]
	prune = false
[delta]
	paging = always
	navigate = true
	light = false
	line-numbers = true
[rerere]
	enabled = true
[alias]
	# define how I like logs and the like formatted, used in other aliases
	standard-diff-format = diff --irreversible-delete --find-renames --find-copies
	log-message-default = log --pretty=format:\"%Cblue%an, %Creset%cr :: %Cred%h%Creset :: %Cblue%s%Creset\"
	log-message-iso-dates = log --pretty=format:\"%Creset%cd, %Cblue%an :: %Cred%h%Creset :: %Cblue%s%Creset\"
	log-message-diff = log -p --pretty=format:\"%n%n%n%n%n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=%n === %Cblue%an, %Creset%cr :: %Cred%h%Creset :: %Cblue%s%Creset ===%n==================================================================================================================\"
	log-message-text = log --pretty=format:\"%Cblue%an, %Creset%cr :: %Cred%h%Creset :: %Cblue%s%Creset%n---------------------%n%b%n%n\"
	log-message-diff-and-text = log -p --pretty=format:\"%n%n%n%n%n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=%n === %Cblue%an, %Creset%cr :: %Cred%h%Creset :: %Cblue%s%Creset ===%n==================================================================================================================%n%b%n%n\"
	ls = !git ls-files $@ | delta
	# clean local branches
	list-prunable-branches = !git branch -vv | grep ': gone]' | awk '{print $1}'
	prune-and-list-prunable-local-branches = !git fetch --prune && git list-prunable-branches
	prune-remote-and-local-branches = !git list-prunable-branches | xargs git branch -D
	prunewell = !git prune-and-list-prunable-local-branches && git prune-remote-and-local-branches
	list-local-only-branches = !git branch -vv | grep -v ']' | awk '{print $1}'
	# various common commands
	sw = switch  # better checkout, only for branches
	sw- = switch -  # in case of typo
	s = status
	d = standard-diff-format
	dd = diff --staged --irreversible-delete --find-renames --find-copies
	l = log-message-default
	lpb = log-message-diff-and-text
	lbp = lpb
	ldate = log-message-iso-dates
	lb = log-message-text
	lp = log-message-diff
	log-since-last-pull = log-message-default @{1}..
	full-log-since-last-pull = log-message-diff-and-text @{1}..
	pu = !git pull --rebase && git push  # convenient for dotfiles
	puf = pu
	puff = pu
	pam = push --force-with-lease  # commonly combined with rbd
	pama = pam
	ll = log-since-last-pull
	dl = standard-diff-format @{1}.. --relative
	sl = dl --name-status
	ln = log-message-default @{u}..
	dln = standard-diff-format @{u}..
	sln = dln --name-status
	q = restore --staged  # expects files to be unstaged
	qa = restore --staged :/  # unstages all files
	c = git clean -i
	qqq = !git restore --source=HEAD --staged --worktree $@ || git clean -df $@  # throw away changes to specified files
	qqqqa = !git clean -df && git restore --source=HEAD --staged --worktree :/  # throw away all changes in the worktree
	cam = commit --amend --no-edit
	cama = cam -a
	camaa = cama
	camaaa = cama  # typos happen
	# what is new on this branch (often a PR) compared to development
	dn = standard-diff-format development..HEAD
	dnn = standard-diff-format development...HEAD
	sn = dn --name-status
	snn = dnn --name-status
	ln = log-message-default development..HEAD
	lnn = log-message-default development...HEAD
	lbn = log-message-text development..HEAD
	lpn = log-message-diff development..HEAD
	lbnn = log-message-text development...HEAD
	lpnn = log-message-diff development...HEAD
	lbpn = log-message-diff-and-text development..HEAD
	lpbn = lbpn
	lbpnn = log-message-diff-and-text development...HEAD
	lpbnn = lbpnn
	# what is missing on this branch (often a PR) compared to development
	dm = standard-diff-format HEAD..development
	sm = dm --name-status
	lm = log-message-default HEAD..development
	lbm = log-message-text HEAD...development
	lpm = log-message-diff HEAD...development
	dmm = standard-diff-format HEAD...development
	smm = dmm --name-status
	lmm = log-message-default HEAD...development
	lbmm = log-message-text HEAD...development
	lpmm = log-message-diff HEAD...development
	# rebase current branch on another
	# https://superuser.com/a/435912
	rb = !bash -c 'git switch "$1" && git pull && git switch - && git rebase "$1"' -
	rbd = rb development
	rdb = rbd  # typos
    rbd-stash = !git stash && git rbd && git stash pop
    rdb-stash = rbd-stash
    srbd = rbd-stash
    srdb = rbd-stash
